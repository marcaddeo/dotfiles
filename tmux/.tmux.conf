# Set the prefix to C-a
unbind C-b
set -g prefix C-a
bind a send-prefix

# Don't automatically rename my windows once i've set a name, plaese
set-option -gw allow-rename off
setw -g automatic-rename off

# Quickly switch between windows with C-a C-a
bind-key C-a last-window

# Set the default TERM
set -g default-terminal "screen-256color"

# Set the scrollback to 10000 lines
set -g history-limit 10000

# Enable mouse
setw -g mouse on

# Toggle mouse on with ^A m
bind m \
    setw -g mouse on \;\
    display 'Mouse: ON'

# Toggle mouse off with ^A M
bind M \
    setw -g mouse off \;\
    display 'Mouse: OFF'

# Rebind pane splitting keys
unbind % # Remove the default binding, since we're remapping
unbind '"' # Remove the default binding, since we're remapping
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Show visual notifications when a window has activity
setw -g monitor-activity on
set -g visual-activity on

# Faster command sequences
set -s escape-time 0

# Scrollback like vim
setw -g mode-keys vi
set -g status-keys vi
# Unknown commands
#bind-key -T vi-edit Up   history-up
#bind-key -T vi-edit Down history-down

# Move between panes like vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Move between windows like vim
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize panes like vim
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Yank and Paste like vim
bind Escape copy-mode
unbind p # Defaults to previous-window, but I don't really cycle through windows
bind p paste-buffer
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'


# Don't resize windows to the smallest client
setw -g aggressive-resize on

# --- colors (solarized dark)
# default statusbar colors
set -g status-style bg=black,fg=yellow,default

# set -g aux-status-bg black
# set -g aux-status-fg yellow
# set -g aux-status-attr default

# default window title colors
setw -g window-status-style fg=brightblue,bg=default

# active window title colors
setw -g window-status-current-style fg=yellow,bg=default,dim

# pane border
set -g pane-border-style fg=black,bg=default
set -g pane-active-border-style fg=yellow,bg=default

# command line/message text
set -g message-style bg=black,fg=yellow

# pane number display
set -g display-panes-active-colour yellow
set -g display-panes-colour brightblue

# clock
setw -g clock-mode-colour yellow
# --- end colors

# Smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Status bar
set -g status-interval 5
# set -g status-right "#(~/dotfiles/script/tmux/tmux-line -s \" | \" -w timetrap -w timetrap-day -w timetrap-week) "
set -g status-right-length 150
set -g status-justify left

# set -g aux-status on
# set -g aux-status-left " #(~/dotfiles/script/tmux/tmux-line -w timetrap)"
# set -g aux-status-right "#(~/dotfiles/script/tmux/tmux-line -s \" | \" -w timetrap-day -w timetrap-week -w clock) "
# set -g aux-status-left-length 150
# set -g aux-status-right-length 150

# C-a r for reloading ~/.tmux.conf
unbind r
bind r source-file ~/.tmux.conf\; display-message "~/.tmux.conf is reloaded"

# C-a e for running a command on all panes
bind e command-prompt -p "Command:" \
    "run \"tmux list-sessions -F '##{session_name}' | xargs -I SESS \ tmux list-windows -t SESS -F 'SESS:##{window_index}' | xargs -I SESS_WIN \ tmux list-panes -t SESS_WIN -F 'SESS_WIN.##{pane_index}' | xargs -I SESS_WIN_PANE \ tmux send-keys -t SESS_WIN_PANE '%1' Enter\""

# Ressurect settings
set -g @resurrect-processes 'ncmpcpp'

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-open'

run '~/.tmux/plugins/tpm/tpm'
