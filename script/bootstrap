#!/bin/bash
## This script is intended to bootstrap a freshly installed copy of OS X to get
## up and running with my development environment
##
## Tested on OS X 10.11 El Capitan
DOTFILES="$HOME/dotfiles"

## Install software

# Authenticate sudo
sudo -v

# Install homebrew
yes | ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

# Tap homebrew/dupes
brew tap homebrew/dupes

# Tap homebrew/versions
brew tap homebrew/versions

# Get the latest git
brew install git

# Clone my dotfiles
git clone --recursive https://github.com/marcaddeo/dotfiles.git $DOTFILES

# Install Zsh
brew install zsh
echo $(which zsh) | sudo tee -a /etc/shells; chsh -s $(which zsh)

# Install mosh
brew install mobile-shell

# Install the gnu coreutils so we can use dircolors as gdircolors
brew install coreutils

# Install fzf
brew reinstall --HEAD fzf
yes | /usr/local/opt/fzf/install

# Install pip
sudo easy_install pip

# Install neovim
brew tap neovim/neovim
brew install --HEAD neovim
pip2 install --user neovim

# Install tmux
brew install tmux

# Install keybase
brew install keybase

# Create the ~/.gnupg directory if it doesn't exist
if [[ ! -d $HOME/.gnupg ]]; then
    mkdir $HOME/.gnupg
fi

# Login to keybase but don't pull keys
# Pulling keys will fail on login, because my key and loging passphrase are
# different
keybase login --no-key-pull
# Actually pull down my keys in a separate transaction so I can use the proper
# passphrase
keybase pull

# Create the ~/.ssh directory if it doesn't exist
if [[ ! -d $HOME/.ssh ]]; then
    mkdir $HOME/.ssh
fi

# Decrypt and copy ssh keys
keybase decrypt -S marcaddeo -o $HOME/.ssh/id_rsa.github $DOTFILES/ssh/id_rsa.github.asc
chmod 600 $HOME/.ssh/id_rsa.github
ssh-keygen -y -f $HOME/.ssh/id_rsa.github > $HOME/.ssh/id_rsa.github.pub

# Add github to the known hosts
ssh-keyscan github.com >> $HOME/.ssh/known_hosts

# Switch the dotfiles repository to an ssh origin
pushd .

cd $DOTFILES
git remote remove origin
git remote add origin git@github.com:marcaddeo/dotfiles.git
GIT_SSH_COMMAND="ssh -i $HOME/.ssh/id_rsa.github" git fetch
git branch master --set-upstream-to origin/master

# We also want to assume the terminal preferences plist is unchanged because it
# will change all the time and cause a dirty repo. To revert this to add changes
# just run `git update-index --no-assume-unchanged terminal/com.apple.Terminal.plist`
git update-index --assume-unchanged terminal/com.apple.Terminal.plist

popd

# Install timetrap
sudo gem install timetrap

# Install languages
brew tap homebrew/homebrew-php

brew install node
brew install php56
brew install erlang
brew install elixir

# Install dependency managers
brew install composer
npm install -g brunch
npm install -g grunt-cli
npm install -g gulp
npm install -g bower

# Install dev tools
brew install wp-cli

# Install better ctags for php
curl https://raw.githubusercontent.com/shawncplus/phpcomplete.vim/master/misc/ctags-better-php.rb > /usr/local/Library/Formula/ctags-better-php.rb
brew install ctags-better-php

# Install utilities
brew install tig
brew install the_silver_searcher
brew install tree
brew install wget
brew install colordiff
brew install jq

## Install applications

# Install homebrew cask
brew install caskroom/cask/brew-cask

# Install my usual applications
brew cask install alfred
brew cask install bartender
brew cask install caffeine
brew cask install dropbox
brew cask install duet
brew cask install flux
brew cask install hipchat
brew cask install istat-menus
brew cask install jenkins-menu
brew cask install little-snitch
brew cask install moom
brew cask install sonos
brew cask install spotify
brew cask install spotify-notifications
brew cask install steam
brew cask install transmit
brew cask install vagrant
brew cask install virtualbox
brew cask install vlc
brew cask install vmware-fusion

function install_chrome {
    local TEMP=$TMPDIR$(uuidgen)
    mkdir -p $TEMP/mount
    curl https://dl.google.com/chrome/mac/stable/GGRO/googlechrome.dmg > $TEMP/chrome.dmg
    yes | hdiutil attach -noverify -nobrowse -mountpoint $TEMP/mount $TEMP/chrome.dmg
    cp -r $TEMP/mount/*.app /Applications
    hdiutil detach $TEMP/mount
    rm -r $TEMP
}

function install_firefox {
    local TEMP=$TMPDIR$(uuidgen)
    mkdir -p $TEMP/mount
    pushd .
    cd $TEMP
    wget -r -nH --cut-dirs=6 --no-parent --reject "index.html*" https://ftp.mozilla.org/pub/firefox/releases/latest/mac/en-US/
    mv "*.dmg" firefox.dmg
    yes | hdiutil attach -noverify -nobrowse -mountpoint $TEMP/mount $TEMP/firefox.dmg
    cp -r $TEMP/mount/*.app /Applications
    hdiutil detach $TEMP/mount
    rm -r $TEMP
    popd
}

function install_little_snitch {
    local LITTLE_SNITCH_PATH=$(brew cask list little-snitch | grep -v Staged | cut -d ' ' -f1)

    open "$LITTLE_SNITCH_PATH/Little\ Snitch\ Installer.app"
}

# We need to install Chrome and Firefox manually because home brew cask uses a
# symlink for applications, and 1password doesn't like symlinks.
install_chrome
install_firefox

# Little snitch has an additional installation step
install_little_snitch

## Set sensible OS X defaults

# Remove the [ mark from the terminal
defaults write com.apple.Terminal AutoMarkPromptLines -int 0

## Install symlinks
$DOTFILES/script/install
